name: Nightly Build

on:
  schedule:
    # Run every day at 2:00 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: write

jobs:
  nightly-build:
    name: Nightly Build (${{ matrix.arch }})
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: x64
            devcmd_arch: x64
            artifact_suffix: addon64
            artifact_name: zzz_display_commander.addon64
          - arch: x86
            devcmd_arch: x86
            artifact_suffix: addon32
            artifact_name: zzz_display_commander.addon32

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Ninja
        uses: seanmiddleditch/gha-setup-ninja@v5

      - name: Setup MSVC (${{ matrix.devcmd_arch }})
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.devcmd_arch }}

      - name: Configure
        shell: bash
        run: |
          cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release

      - name: Build
        shell: bash
        run: |
          cmake --build build --config Release --parallel

      - name: Collect artifacts
        id: collect
        shell: bash
        run: |
          mkdir -p artifacts
          # Look specifically for display_commander addon files
          display_commander_file=$(find build -type f -name "zzz_display_commander.${{ matrix.artifact_suffix }}" | head -1)
          if [ -z "$display_commander_file" ]; then
            echo "Display Commander addon file not found; listing build dir for debugging:" >&2
            find build -type f -name "*.${{ matrix.artifact_suffix }}" || true
            ls -la build || true
            exit 1
          fi
          # Copy the display_commander addon with the correct name
          cp "$display_commander_file" "artifacts/${{ matrix.artifact_name }}"

          echo "artifact_dir=artifacts" >> $GITHUB_OUTPUT

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: nightly-zzz-display-commander-${{ matrix.artifact_suffix }}
          path: ${{ steps.collect.outputs.artifact_dir }}/*
          if-no-files-found: error
          retention-days: 30 # Keep nightly builds for 30 days

  nightly-build-driver-restart:
    name: Nightly Build Driver Restart Tool
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Ninja
        uses: seanmiddleditch/gha-setup-ninja@v5

      - name: Setup MSVC (x64)
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: Configure
        shell: bash
        run: |
          cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release

      - name: Build Driver Restart Tool
        shell: bash
        run: |
          cmake --build build --config Release --target driver_restart --parallel

      - name: Collect Driver Restart Artifact
        shell: bash
        run: |
          mkdir -p artifacts
          if [ -f "build/tools/driver_restart.exe" ]; then
            echo "Found driver_restart.exe: build/tools/driver_restart.exe"
            cp "build/tools/driver_restart.exe" "artifacts/driver_restart.exe"
          else
            echo "Error: driver_restart.exe not found in build/tools/" >&2
            find build -type f -name "*.exe" || true
            exit 1
          fi

      - name: Upload Driver Restart Artifact
        uses: actions/upload-artifact@v4
        with:
          name: nightly-driver-restart-tool
          path: artifacts/driver_restart.exe
          if-no-files-found: error
          retention-days: 30

  nightly-release:
    name: Nightly Release
    needs: [ nightly-build, nightly-build-driver-restart ]
    runs-on: windows-latest
    steps:
      - name: Download build artifacts (x64)
        uses: actions/download-artifact@v4
        with:
          name: nightly-zzz-display-commander-addon64
          path: artifacts

      - name: Download build artifacts (x86)
        uses: actions/download-artifact@v4
        with:
          name: nightly-zzz-display-commander-addon32
          path: artifacts

      - name: Download driver restart tool
        uses: actions/download-artifact@v4
        with:
          name: nightly-driver-restart-tool
          path: artifacts

      - name: Create/Update Nightly Release
        uses: ncipollo/release-action@v1
        with:
          tag: nightly
          name: Nightly Build
          allowUpdates: true
          artifacts: artifacts/*
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            ## Nightly Build

            This is an automated nightly build of Display Commander.

            **Build Date**: ${{ github.event.schedule || 'Manual Trigger' }}

            **Files**:
            - `zzz_display_commander.addon64` - 64-bit version
            - `zzz_display_commander.addon32` - 32-bit version
            - `driver_restart.exe` - Graphics driver restart utility

            **Note**: These are development builds. For stable releases, use the main releases.
